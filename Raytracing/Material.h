#pragma once

//----------------------------------------------------------------------------------------------------------------------------------------
struct HitInfo;

//----------------------------------------------------------------------------------------------------------------------------------------
class Material
{
public:
	//------------------------------------------------------------------------------------------------------------------------------------
	virtual ~Material();

	//------------------------------------------------------------------------------------------------------------------------------------
	void			AddRef()			{ ++numRefs; }
	void			Release();

	//------------------------------------------------------------------------------------------------------------------------------------
	virtual bool	Scatter(const Ray& _ray, const HitInfo& _hitInfo, Vector3& _attenuation, Ray& _scattered) const = 0;

protected:
	//------------------------------------------------------------------------------------------------------------------------------------
	Material(const Vector3& _albedo);

protected:
	//------------------------------------------------------------------------------------------------------------------------------------
	Vector3			albedo;

private:
	//------------------------------------------------------------------------------------------------------------------------------------
	int				numRefs;
};

//----------------------------------------------------------------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------------------------------------------------------------
class LambertMaterial : public Material
{
public:
	//------------------------------------------------------------------------------------------------------------------------------------
	LambertMaterial(const Vector3& _albedo);
	bool			Scatter(const Ray& _ray, const HitInfo& _hitInfo, Vector3& _attenuation, Ray& _scattered) const override;
};

//----------------------------------------------------------------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------------------------------------------------------------
class MetalMaterial : public Material
{
public:
	//------------------------------------------------------------------------------------------------------------------------------------
	MetalMaterial(const Vector3& _albedo);
	bool			Scatter(const Ray& _ray, const HitInfo& _hitInfo, Vector3& _attenuation, Ray& _scattered) const override;
};